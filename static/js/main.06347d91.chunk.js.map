{"version":3,"sources":["Requirement.js","GraduationRequirements.js","Plan.js","App.js","serviceWorker.js","index.js"],"names":["stylization","backgroundColor","Requirements","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rows","console","log","courses","i","length","push","react_default","a","createElement","key","style","fontSize","textAlign","name","Component","overflow","majors","value","label","GraduationRequirements","_this","handleChange","selectedOption","setState","major","state","selectedMajor","generalEducation","Requirement","react_select_esm","onChange","options","Plan","App","className","src_GraduationRequirements","src_Plan","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06347d91.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst stylization = {\n\tbackgroundColor: \"#C5C8C6\",\n}\n\n\nclass Requirements extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\tconst rows = [];\n\t\tconsole.log(this.props.courses);\n\t\tfor (var i = 0; i < this.props.courses.length; i++){\n\t\t\trows.push(<tr key={i} >{this.props.courses[i][0]} {this.props.courses[i][1]}</tr>)\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div style={{fontSize: \"calc(3px + 2vmin)\", textAlign: \"left\"}}>\n\t\t\t\t\t{this.props.name}\n\t\t\t\t</div>\n\t\t\t\t<table style={stylization}>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{rows}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Requirements;\n","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport Requirement from './Requirement.js'\n\nconst stylization = {\n\tbackgroundColor: \"#C5C8C6\",\n\toverflow: \"visible\"\n}\nconst majors = [\n\t{value: 'cse', label: 'Computer Science & Engineering'},\n\t{value: 'me', label: 'Mechanical Engineering'},\n\t{value: 'bio', label: 'Biology'},\n\t{value: 'phys', label: 'Physics'},\n\t{value: 'math', label: 'Applied Mathematics'}\n]\n\nconst majorToRequirement = {\n}\n\nclass GraduationRequirements extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tmajor: null\n\t\t}\n\t}\n\n\thandleChange = (selectedOption) => {\n\t\tthis.setState({ major: selectedOption });\n\t\tconsole.log(`Option selected:`, selectedOption);\n\t}\n\n\trender() {\n\t\tconst selectedMajor = this.state.major\n\t\tconst generalEducation = (\n\t\t\t<div>\n\t\t\t\t<div style={{fontSize: \"calc(7px + 2vmin)\", textAlign: \"center\"}}>\n\t\t\t\t\tGeneral Education Requirements\n\t\t\t\t</div>\n\t\t\t\t<div style={{fontSize: \"calc(5px + 2vmin)\", textAlign: \"left\"}}>\n\t\t\t\t\tLower Division General Education\n\t\t\t\t</div>\n\t\t\t\t<Requirement name=\"Spark Seminar\" courses={[[\"SPARK\", \"001\"]]}/>\n\t\t\t\t<Requirement name=\"Written Communication\" courses={[[\"WRI\", \"010\"]]}/>\n\t\t\t\t<Requirement name=\"Quantitative Reasoning\" courses={[[\"ECON\", \"010\"], [\"MATH\", \"011\"], [\"MATH\", \"021\"], [\"PHIL\", \"005\"] , [\"POLI\", \"010\"], [\"PSY\", \"010\"], [\"SOC\", \"010\"]]}/>\n\t\t\t</div>\n\t\t);\n\t\treturn (\n\t\t\t<div style={stylization}>\n\t\t\t\t<div style={{fontSize: \"calc(10px + 2vmin)\", textAlign: \"center\"}}>\n\t\t\t\t\tGraduation Requirements\n\t\t\t\t</div>\n\t\t\t\t<Select\n\t\t\t\t\tvalue={selectedMajor}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\toptions={majors}\n\t\t\t\t/>\n\t\t\t\t{(this.state.major == null) ? \"\":\n\t\t\t\t\t\tgeneralEducation\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default GraduationRequirements;\n","import React, { Component } from 'react';\n\nconst stylization = {\n\tbackgroundColor: \"#FF0000\",\n}\nclass Plan extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div style={stylization}>\n\t\t\t\tPlan\n\t\t\t</div>\n\t\t);\n\t\t// PSEUDO: Once the major is selected, list semesters \n\t\t// for fall and spring and let them input the classes that \n\t\t// they have taken and plan to take. \n\t\t\t\n\t\t\t// PSEUDO: While they're inputing their courses, we \n\t\t\t// need to have a drop down menu of suggested classes\n\t\t\t// that they could be typing. (If we got the time)\n\t\t\t\n\t// PSEUDO: Hard part, take the courses that they've taken\n\t// and the ones they plan to take and determine if these \n\t// will fulfill their course requirements. \n\t\t\n\t\t\n\t}\n}\n\nexport default Plan;\n","import React, { Component } from 'react';\nimport './App.css';\nimport GraduationRequirements from './GraduationRequirements.js'\nimport Plan from './Plan.js'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\tOn my Way\n\t\t\t\t</header>\n\t\t\t\t<div className=\"App-body\">\n\t\t\t\t\t<GraduationRequirements/>\n\t\t\t\t\t<Plan/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}